version: "3.8"

networks:
  internal-net:
    external: true

services:
  account-db:
    image: postgres:15.3
    hostname: account-db
    container_name: account-db
    networks:
      - internal-net
    ports:
      - 5432:5432
    env_file:
      - $PWD/services/account/.env
    tty: true
    volumes:
      - ./.docker/pg-data-account:/var/lib/postgresql/data
      - ./services/account/internal/sql/schema/init.sql:/docker-entrypoint-initdb.d/init.sql

  db-test:
    image: postgres:15.3
    hostname: db-test
    container_name: db-test
    networks:
      - internal-net
    ports:
      - 5440:5432
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    tty: true
    volumes:
      - ./services/account/internal/sql/schema/init.sql:/docker-entrypoint-initdb.d/init_account.sql
      - ./services/transaction/internal/sql/schema/init.sql:/docker-entrypoint-initdb.d/init_transaction.sql

  transaction-db:
    image: postgres:15.3
    hostname: transaction-db
    container_name: transaction-db
    networks:
      - internal-net
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=transaction
    tty: true
    volumes:
      - ./.docker/pg-data-transaction:/var/lib/postgresql/data
      - ./services/transaction/internal/sql/schema/init.sql:/docker-entrypoint-initdb.d/init.sql

  account-ms:
    container_name: account-ms
    hostname: account
    build:
      context: services/account
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/account:/usr/src/app
    env_file:
      - $PWD/services/account/.env
    networks:
      - internal-net
    ports:
      - 3000:3000
    depends_on:
      - account-db

  transaction-ms:
    container_name: transaction-ms
    hostname: transaction
    build:
      context: services/transaction
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/transaction:/usr/src/app
    env_file:
      - $PWD/services/transaction/.env
    networks:
      - internal-net
    ports:
      - 3001:3001
    depends_on:
      - transaction-db
      - bazuka

  bazuka:
    container_name: kafka
    hostname: kafka
    image: wurstmeister/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ZOOKEEPER_CONNECT=zook:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://bazuka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_NUM_PARTITIONS=1
    networks:
      - internal-net
    ports:
      - 9092:9092
    depends_on:
      - zook

  zook:
    container_name: zookeeper
    hostname: zookeeper
    image: zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_ID=1
      - ZOOKEEPER_SERVER=zookeeper
    networks:
      - internal-net
    ports:
      - 2181:2181

  kafkaui:
    container_name: kafka-ui
    hostname: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_NAME=local
    networks:
      - internal-net
    ports:
      - 8081:8080
    depends_on:
        - zook
        - bazuka

  api-gateway:
    image: devopsfaith/krakend:latest
    volumes:
      - ./services/krakend/krakend.json:/etc/krakend/krakend.json
    networks:
      - internal-net
    ports:
      - "8080:8080"

